{"version":3,"sources":["src/views/MenuPrincipal.js","src/functions/formatNumber.js","src/components/CardGlobal.js","src/components/Header.js","src/views/TotalGlobal.js","src/functions/getData.js","src/components/CardCountries.js","src/views/TotalCountries.js","src/Routes.js","App.js","web-build/register-service-worker.js","src/img/earth.jpg","src/img/countries.jpg"],"names":["MenuPrincipal","props","state","View","style","flex","ScrollView","TouchableOpacity","onPress","Actions","jump","containerStyle","estilo","estiloCard","title","Image","source","require","Platform","OS","estiloImgWeb","estiloImg","resizeMode","Component","StyleSheet","create","marginVertical","maxHeight","borderRadius","elevation","borderColor","borderWidth","alignItems","width","height","numberToReal","numero","toString","length","toFixed","split","join","CardGlobal","cardStyle","this","country","countryCode","viewBad","Text","label","numbersBad","newConfirmed","newDeaths","newRecovered","estiloDivider","viewGood","goodNumbers","totalConfirmed","totalDeaths","totalRecovered","paddingVertical","backgroundColor","fontWeight","fontSize","color","marginTop","marginBottom","CustomHeader","replace","name","transparent","React","TotalGlobal","data","Promise","result","axios","get","then","resp","Global","setState","getData","NewConfirmed","NewDeaths","NewRecovered","TotalConfirmed","TotalRecovered","TotalDeaths","CardCountries","componentesLista","item","Country","CountryCode","FlatList","renderItem","TotalCountries","dataOriginal","Countries","texto","filtro","filter","f","toLowerCase","searchBar","rounded","placeholder","onChangeText","e","pesquisa","Rotas","hideNavBar","key","component","initial","App","principal","StatusBar","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error","console","module","exports"],"mappings":"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","file":"static/js/app.5d6cdbea.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, StyleSheet, Image, ScrollView, TouchableOpacity, Platform } from 'react-native';\r\nimport { Card } from 'react-native-elements';\r\nimport { Actions } from 'react-native-router-flux'\r\nexport default class MenuPrincipal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={{ flex: 1 }}>\r\n                <ScrollView>\r\n                    <TouchableOpacity onPress={() => Actions.jump('totalGlobal')}>\r\n                        <Card\r\n                            containerStyle={estilo.estiloCard}\r\n                            title='Total Global'\r\n                        >\r\n                            <Image source={require('../img/earth.jpg')} style={Platform.OS === 'web' ? estilo.estiloImgWeb : estilo.estiloImg} resizeMode='cover' />\r\n                        </Card>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => Actions.jump('totalCountries')}>\r\n                        <Card\r\n                            containerStyle={estilo.estiloCard}\r\n                            title='Total Por PaÃ­s'\r\n                        >\r\n                            <Image source={require('../img/countries.jpg')} style={Platform.OS === 'web' ? estilo.estiloImgWeb : estilo.estiloImg} resizeMode='stretch' />\r\n                        </Card>\r\n                    </TouchableOpacity>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst estilo = StyleSheet.create({\r\n    estiloCard: {\r\n        marginVertical: 30,\r\n        maxHeight: 400,\r\n        borderRadius: 10,\r\n        elevation: 5,\r\n        borderColor: '#b2bec3',\r\n        borderWidth: 2,\r\n        alignItems: 'center'\r\n    },\r\n    estiloImg: {\r\n        width: \"100%\",\r\n        height: \"80%\",\r\n    },\r\n    estiloImgWeb: {\r\n        width: 500,\r\n        height: 200,\r\n    }\r\n})","export function numberToReal(numero) {\r\n    if (numero.toString().length > 3) {\r\n        var numero = numero.toFixed(2).split('.');\r\n        numero[0] = numero[0].split(/(?=(?:...)*$)/).join('.');\r\n        return numero.join(',');\r\n    } else {\r\n        return numero\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { Card, Divider } from 'react-native-elements'\r\nimport { numberToReal } from '../functions/formatNumber'\r\n\r\nexport default class CardGlobal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View>\r\n                <Card containerStyle={estilo.cardStyle} title={!this.props.country ? null : this.props.country + ' ' + this.props.countryCode}>\r\n                    <View>\r\n                        <View style={estilo.viewBad}>\r\n                            <Text style={estilo.label}>New Confirmed:\r\n                                <Text style={estilo.numbersBad}> {numberToReal(this.props.newConfirmed)}</Text>\r\n                            </Text>\r\n                            <Text style={estilo.label}>New Deaths:\r\n                                <Text style={estilo.numbersBad}>{numberToReal(this.props.newDeaths)}</Text>\r\n                            </Text>\r\n                            <Text style={estilo.label}>New Recovered:\r\n                                <Text style={estilo.numbersBad}> {numberToReal(this.props.newRecovered)}</Text>\r\n                            </Text>\r\n                        </View>\r\n                        <Divider style={estilo.estiloDivider} />\r\n                        <View style={estilo.viewGood}>\r\n                            <Text style={estilo.label}>Total Confirmed:\r\n                                <Text style={estilo.goodNumbers}> {numberToReal(this.props.totalConfirmed)}</Text>\r\n                            </Text>\r\n                            <Text style={estilo.label}>Total Deaths:\r\n                                <Text style={estilo.goodNumbers}> {numberToReal(this.props.totalDeaths)}</Text>\r\n                            </Text>\r\n                            <Text style={estilo.label}>Total Recovered:\r\n                            <Text style={estilo.goodNumbers}> {numberToReal(this.props.totalRecovered)}</Text></Text>\r\n                        </View>\r\n                    </View>\r\n                </Card>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst estilo = StyleSheet.create({\r\n    estiloDivider: {\r\n        paddingVertical: 5,\r\n        backgroundColor: '#81ecec',\r\n        borderRadius: 10\r\n    },\r\n    label: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18\r\n    },\r\n    numbersBad: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n        color: '#e17055'\r\n    },\r\n    goodNumbers: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n        color: '#00b894'\r\n    },\r\n    viewGood: {\r\n        marginTop: 15\r\n    },\r\n    viewBad: {\r\n        marginBottom: 15\r\n    },\r\n    cardStyle: {\r\n        borderRadius: 10,\r\n        elevation: 5,\r\n        borderColor: '#b2bec3',\r\n    }\r\n})","import React from 'react'\r\nimport { Header, Left, Body, Button, Icon, Title, Right, } from 'native-base'\r\nimport { Actions } from 'react-native-router-flux'\r\n\r\n\r\nexport default class CustomHeader extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n                <Left>\r\n                    <Button onPress={() => Actions.replace('menuPrincipal')}>\r\n                        {/* <Image source={require('../icons/back.png')} style={{ width: '40%', height: '40%' }} /> */}\r\n                        <Icon name=\"arrow-back\" />\r\n                    </Button>\r\n                </Left>\r\n                <Body>\r\n                    <Title>Total Global</Title>\r\n                </Body>\r\n                <Right>\r\n                    <Button transparent>\r\n\r\n                    </Button>\r\n                </Right>\r\n            </Header>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { getTotalGlobal } from '../functions/getData'\r\nimport CardGlobal from '../components/CardGlobal'\r\nimport CustomHeader from '../components/Header';\r\n\r\nexport default class TotalGlobal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: null\r\n        };\r\n    }\r\n\r\n    async getData() {\r\n        let data = await getTotalGlobal()\r\n        this.setState({ data })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <View style={{ flex: 1 }}>\r\n                <CustomHeader />\r\n                {\r\n                    !this.state.data ? null :\r\n                        <CardGlobal\r\n                            newConfirmed={this.state.data.NewConfirmed}\r\n                            newDeaths={this.state.data.NewDeaths}\r\n                            newRecovered={this.state.data.NewRecovered}\r\n                            totalConfirmed={this.state.data.TotalConfirmed}\r\n                            totalRecovered={this.state.data.TotalRecovered}\r\n                            totalDeaths={this.state.data.TotalDeaths}\r\n                        />\r\n                }\r\n\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import axios from 'axios'\r\n\r\nexport function getTotalGlobal() {\r\n    return new Promise(result => {\r\n        axios.get('https://api.covid19api.com/summary')\r\n            .then(resp => {\r\n                result(resp.data.Global)\r\n            })\r\n    })\r\n}\r\n\r\n\r\nexport function getTotalCountries() {\r\n    return new Promise(result => {\r\n        axios.get('https://api.covid19api.com/summary')\r\n            .then(resp => {\r\n                result(resp.data.Countries)\r\n            })\r\n    })\r\n}\r\n","import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, FlatList } from 'react-native';\r\nimport { Card, Divider } from 'react-native-elements'\r\nimport { numberToReal } from '../functions/formatNumber'\r\nexport default class CardCountries extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n\r\n\r\n    componentesLista = ({ item }) => (\r\n        <Card containerStyle={estilo.cardStyle} title={item.Country + ' ' + item.CountryCode}>\r\n            <View>\r\n                <View style={estilo.viewBad}>\r\n                    <Text style={estilo.label}>New Confirmed:\r\n                                <Text style={estilo.numbersBad}> {numberToReal(item.NewConfirmed)}</Text>\r\n                    </Text>\r\n                    <Text style={estilo.label}>New Deaths:\r\n                                <Text style={estilo.numbersBad}>{numberToReal(item.NewDeaths)}</Text>\r\n                    </Text>\r\n                    <Text style={estilo.label}>New Recovered:\r\n                                <Text style={estilo.numbersBad}> {numberToReal(item.NewRecovered)}</Text>\r\n                    </Text>\r\n                </View>\r\n                <Divider style={estilo.estiloDivider} />\r\n                <View style={estilo.viewGood}>\r\n                    <Text style={estilo.label}>Total Confirmed:\r\n                                <Text style={estilo.goodNumbers}> {numberToReal(item.TotalConfirmed)}</Text>\r\n                    </Text>\r\n                    <Text style={estilo.label}>Total Deaths:\r\n                                <Text style={estilo.goodNumbers}> {numberToReal(item.TotalDeaths)}</Text>\r\n                    </Text>\r\n                    <Text style={estilo.label}>Total Recovered:\r\n                            <Text style={estilo.goodNumbers}> {numberToReal(item.TotalRecovered)}</Text></Text>\r\n                </View>\r\n            </View>\r\n        </Card>\r\n    )\r\n\r\n    render() {\r\n        return (\r\n            <View style={{ flex: 1 }}>\r\n                <FlatList\r\n                    renderItem={this.componentesLista}\r\n                    data={this.props.data}\r\n                />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst estilo = StyleSheet.create({\r\n    estiloDivider: {\r\n        paddingVertical: 5,\r\n        backgroundColor: '#81ecec',\r\n        borderRadius: 10\r\n    },\r\n    label: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18\r\n    },\r\n    numbersBad: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n        color: '#e17055'\r\n    },\r\n    goodNumbers: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n        color: '#00b894'\r\n    },\r\n    viewGood: {\r\n        marginTop: 15\r\n    },\r\n    viewBad: {\r\n        marginBottom: 15\r\n    },\r\n    cardStyle: {\r\n        borderRadius: 10,\r\n        elevation: 5,\r\n        borderColor: '#b2bec3',\r\n    }\r\n})","import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { getTotalCountries } from '../functions/getData'\r\nimport CardCountries from '../components/CardCountries'\r\nimport { Container, Header, Item, Icon, Button, Input } from 'native-base';\r\nimport CustomHeader from '../components/Header';\r\n\r\nexport default class TotalCountries extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: null,\r\n            dataOriginal: null\r\n        };\r\n    }\r\n\r\n    async getData() {\r\n        let data = await getTotalCountries()\r\n        this.setState({ data })\r\n        this.setState({ dataOriginal: data })\r\n    }\r\n\r\n    pesquisa(texto) {\r\n        let filtro = this.state.data\r\n        if (texto) {\r\n            filtro = filtro.filter(f => f.Country.toLowerCase() == texto.toLowerCase() || f.CountryCode.toLowerCase() == texto.toLowerCase())\r\n            if (filtro.length > 0) {\r\n                this.setState({ data: filtro })\r\n            }\r\n        } else {\r\n            this.setState({ data: this.state.dataOriginal })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <View style={{ flex: 1 }}>\r\n                <CustomHeader />\r\n                <View>\r\n                    <Header searchBar rounded>\r\n                        <Item>\r\n                            <Icon name=\"ios-search\" />\r\n                            <Input placeholder=\"Pesquise por PaÃ­s ou Silga\" onChangeText={(e) => this.pesquisa(e)} />\r\n                            <Icon name=\"ios-flag\" />\r\n                        </Item>\r\n                    </Header>\r\n\r\n                </View>\r\n                {\r\n                    !this.state.data ? null :\r\n\r\n                        <CardCountries\r\n                            data={this.state.data}\r\n                        />\r\n                }\r\n\r\n            </View>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Router, Scene, Stack } from 'react-native-router-flux'\r\n\r\nimport MenuPrincipal from './views/MenuPrincipal'\r\nimport TotalGlobal from './views/TotalGlobal'\r\nimport TotalCountries from './views/TotalCountries'\r\n\r\nexport default function Rotas() {\r\n    return (\r\n        <Router>\r\n            <Stack hideNavBar={true}>\r\n                <Scene key='menuPrincipal' component={MenuPrincipal} initial />\r\n                <Scene key='totalGlobal' component={TotalGlobal} />\r\n                <Scene key='totalCountries' component={TotalCountries} />\r\n            </Stack>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\r\nimport { StyleSheet, Text, View, StatusBar, ImageBackground } from 'react-native';\r\nimport Rotas from './src/Routes';\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n    <View style={estilo.principal}>\r\n      <StatusBar />\r\n      <Rotas />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst estilo = StyleSheet.create({\r\n  principal: {\r\n    flex: 1,\r\n  }\r\n})","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/earth.6e733a72.jpg\";","module.exports = __webpack_public_path__ + \"static/media/countries.e5672347.jpg\";"],"sourceRoot":""}